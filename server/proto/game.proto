syntax = "proto3";
package gameapi;

service Extra {
   rpc ServiceInfo(ServiceInfoRequest) returns (ServiceInfoReply);
}

message ServiceInfoRequest {
}

message ServiceInfoReply {
   bool ready = 1;
}

service Game {
   rpc GetGameProgress(GetGameProgressRequest) returns (GameProgress);

   rpc NewPlayer(NewPlayerRequest) returns (Player);
   rpc GetPlayer(GetPlayerRequest) returns (Player);
   rpc ListPlayers(ListPlayersRequest) returns (stream Player);
   rpc MovePlayer(MovePlayerRequest) returns (Player);

   rpc TakeObject(TakeObjectRequest) returns (ObjectStatus) ;
   rpc GetObjectTakers(GetObjectTakersRequest) returns (GetObjectTakersResponse) ;
}

message GetGameProgressRequest {
}

message GameProgress {
    enum Status {
        WaitingForPlayers = 0;
        StartCountdown = 1;
        InGame = 2;
        ScoreBoard = 3;
    }
    Status status = 1;
    uint32 milliseconds_before_start = 2;
}

message NewPlayerRequest {
   string name = 1;
}

message GetPlayerRequest {
   string id = 1;
}

message ListPlayersRequest {
}

message Vector3 {
   float x = 1;
   float y = 2;
   float z = 3;
}

message MovePlayerRequest {
   string id = 1;
   Vector3 position = 2;
   Vector3 direction = 3;
}

message Player {
   enum Role {
      Wolf = 0;
      Fish = 1;
      Tiger = 2;
      Turkey = 3;
   }
   string id = 1;
   string name = 2;
   Role role = 3;
   Vector3 position = 4;
   Vector3 direction = 5;
   uint64 lastUpdateds = 6;
}

message TakeObjectRequest {
    string object_id = 1;
    string player_id = 2;
}

message ObjectStatus {
    enum Status {
        Unknown = 0;
        Ok = 1;
        AlreadyTaken = 2;
    }

    Status status = 1;
}
message GetObjectTakersRequest {
    string object_id = 1;
}

message PlayerScore {
    string player_id = 1;
    int32 score = 2;
}

message GetObjectTakersResponse {
    repeated PlayerScore players = 1;
}
